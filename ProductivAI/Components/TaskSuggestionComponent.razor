@using ProductivAI.Core.Models
@inject IJSRuntime JSRuntime

<div class="task-suggestion-block">
    <p>I've identified a potential task:</p>
    <div class="task-suggestion-content">
        <h4>@Title</h4>
        <p>Priority: @Priority/5</p>
    </div>
    <button class="task-action-button" @onclick="CreateTask">
        Create Task
    </button>
</div>

@code {
    [Parameter] public string Title { get; set; }
    [Parameter] public int Priority { get; set; }
    [Parameter] public string Description { get; set; }
    [Parameter] public DateTime? DueDate { get; set; }
    [Parameter] public List<string> Subtasks { get; set; } = new();
    [Parameter] public EventCallback<TaskSuggestion> OnTaskCreated { get; set; }

    private async Task CreateTask()
    {
        var task = new TaskSuggestion
            {
                Title = Title,
                Description = Description,
                Priority = Priority,
                DueDate = DueDate,
                Subtasks = Subtasks
            };

        await OnTaskCreated.InvokeAsync(task);
    }
}